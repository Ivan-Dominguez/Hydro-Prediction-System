y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)
}
return(pl)
}
runApp('Dashboard.R')
runApp('Dashboard.R')
plot2<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
if(TRUE){
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)
}
if(TRUE){
pl<-add_trace(
pl,
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)
}
return(pl)
}
plot2<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
if(TRUE){
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)
}
if(TRUE){
pl<-add_trace(
pl,
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)
}
return(pl)
}
runApp('Dashboard.R')
plot2<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
if(TRUE){
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)%>%
add_trace(
x =  ~ pred_list$xcoord_list$cubist,
y =  ~ pred_list$ymax_list$cubist,
mode = 'markers',
type = 'scatter',
name = paste("Cubist Predicted Peak", strftime(pred_list$xcoord_list$cubist,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
}
if(TRUE){
pl<-add_trace(
pl,
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)%>%
add_trace(
x =  ~ pred_list$xcoord_list$xgboost,
y =  ~ pred_list$ymax_list$xgboost,
mode = 'markers',
type = 'scatter',
name = paste("XGBoost Predicted Peak",strftime(pred_list$xcoord_list$xgboost,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
}
return(pl)
}
runApp('Dashboard.R')
runApp('Dashboard.R')
plot2<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
######################## curves #####################
#cubist
if(TRUE){
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)
}
#XGBoost
if(TRUE){
pl<-add_trace(
pl,
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)
}
######################## peaks #####################
if(TRUE){
pl<- add_trace(
add_trace(
x =  ~ pred_list$xcoord_list$cubist,
y =  ~ pred_list$ymax_list$cubist,
mode = 'markers',
type = 'scatter',
name = paste("Cubist Predicted Peak", strftime(pred_list$xcoord_list$cubist,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
)
if(TRUE){
pl<- add_trace(
add_trace(
x =  ~ pred_list$xcoord_list$xgboost,
y =  ~ pred_list$ymax_list$xgboost,
mode = 'markers',
type = 'scatter',
name = paste("XGBoost Predicted Peak",strftime(pred_list$xcoord_list$xgboost,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
)
return(pl)
}
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
plot2<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
######################## curves #####################
#cubist
if(TRUE){
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)
}
#XGBoost
if(TRUE){
pl<-add_trace(
pl,
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)
}
######################## peaks #####################
if(TRUE){
pl<- add_trace(
add_trace(
x =  ~ pred_list$xcoord_list$cubist,
y =  ~ pred_list$ymax_list$cubist,
mode = 'markers',
type = 'scatter',
name = paste("Cubist Predicted Peak", strftime(pred_list$xcoord_list$cubist,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
)
if(TRUE){
pl<- add_trace(
add_trace(
x =  ~ pred_list$xcoord_list$xgboost,
y =  ~ pred_list$ymax_list$xgboost,
mode = 'markers',
type = 'scatter',
name = paste("XGBoost Predicted Peak",strftime(pred_list$xcoord_list$xgboost,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
)
return(pl)
}
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)
plot2<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
######################## curves #####################
#cubist
if(TRUE){
pl<- add_trace(
pl,
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
)
}
#XGBoost
if(TRUE){
pl<-add_trace(
pl,
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
)
}
######################## peaks #####################
#cubist
if(TRUE){
pl<- add_trace(
add_trace(
x =  ~ pred_list$xcoord_list$cubist,
y =  ~ pred_list$ymax_list$cubist,
mode = 'markers',
type = 'scatter',
name = paste("Cubist Predicted Peak", strftime(pred_list$xcoord_list$cubist,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
)
#XGBoost
if(TRUE){
pl<- add_trace(
add_trace(
x =  ~ pred_list$xcoord_list$xgboost,
y =  ~ pred_list$ymax_list$xgboost,
mode = 'markers',
type = 'scatter',
name = paste("XGBoost Predicted Peak",strftime(pred_list$xcoord_list$xgboost,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
)
)
return(pl)
}
daily_plot<-function(pred_list, predictionDate){
pl <-
plot_ly(
mode = 'lines+markers'
) %>%
add_trace(
y =  ~ pred_list$cubist,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Cubist",
line = list(color = 'rgb(255, 0, 255)')
) %>%
add_trace(
y =  ~ pred_list$xgboost,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "XGBoost",
line = list(color = ("blue"))
) %>%
add_trace(
y =  ~ pred_list$DL,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Deep Learning",
line = list(color = 'rgb(255, 128, 0)')
) %>%
add_trace(
y =  ~ pred_list$RF,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Random Forest",
line = list(color = ("green"))
) %>%
add_trace(
y =  ~ pred_list$AVG,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "AVG",
line = list(color = 'rgb(255, 215, 0)')
) %>%
add_trace(
y =  ~ pred_list$test,
x =  ~ pred_list$hours,
mode = 'lines',
type = 'scatter',
name = "Test Data",
line = list(color = ("black"))
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$cubist,
y =  ~ pred_list$ymax_list$cubist,
mode = 'markers',
type = 'scatter',
name = paste("Cubist Predicted Peak", strftime(pred_list$xcoord_list$cubist,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$xgboost,
y =  ~ pred_list$ymax_list$xgboost,
mode = 'markers',
type = 'scatter',
name = paste("XGBoost Predicted Peak",strftime(pred_list$xcoord_list$xgboost,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$DL,
y =  ~ pred_list$ymax_list$DL,
mode = 'markers',
type = 'scatter',
name = paste("Deep Learning Predicted Peak",strftime(pred_list$xcoord_list$DL,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$RF,
y =  ~ pred_list$ymax_list$RF,
mode = 'markers',
type = 'scatter',
name = paste("Random Forest Predicted Peak",strftime(pred_list$xcoord_list$RF,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$avg,
y =  ~ pred_list$ymax_list$avg,
mode = 'markers',
type = 'scatter',
name = paste("AVG Predicted Peak", strftime(pred_list$xcoord_list$avg,format="%H:%M",tz="UTC")),
marker = list(color = ("black"),size=9,symbol="circle")
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$test,
y =  ~ pred_list$ymax_list$test,
mode = 'markers',
type = 'scatter',
name = paste("Real Peak", strftime(pred_list$xcoord_list$test,format="%H:%M",tz="UTC")),
marker = list(color = ("red"),size=13,symbol="triangle-up")
) %>%
add_trace(
x =  ~ pred_list$xcoord_list$mean,
y =  ~ pred_list$ymax_list$test + 2000,
mode = 'markers',
type = 'scatter',
name = paste("Mean",strftime(pred_list$xcoord_list$mean,format="%H:%M",tz="UTC")),
marker = list(color = 'rgb(0, 191, 255)',size=9,symbol="square")
) %>%
layout(
title = paste(predictionDate),
xaxis = list(
title = 'Time',
autotick = TRUE,
showticklabels = TRUE
),
yaxis = list(title = "Power Consumption")
)
pl
return(pl)
}
runApp('Dashboard.R')
runApp('Dashboard.R')
source('driver_program.R')
source('driver_program.R')
#source('daily_plot_fcn.R')
source('plot2.R')
#source('daily_plot_fcn.R')
source('plot2.R')
#source('daily_plot_fcn.R')
source('plot2.R')
#source('daily_plot_fcn.R')
source('plot2.R')
#source('daily_plot_fcn.R')
source('plot2.R')
#open dashboard in browser
runApp('Dashboard.R', launch.browser = TRUE)
source('driver_program.R')
source('driver_program.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
source('driver_program.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
source('driver_program.R')
source('driver_program.R')
source('driver_program.R')
source('driver_program.R')
source('driver_program.R')
